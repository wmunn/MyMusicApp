@model IEnumerable<MyMusicApp.Models.ArtistModel>
@{
    ViewBag.Title = "KoPage";
}

<h2>KoPage</h2>


<h2>Artists</h2>
@section scripts{
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryui")
    <script src="~/Scripts/knockout-2.2.0.js"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.2.0.debug.js")" type="text/javascript"></script>

    <script type="text/javascript">

       function ArtistViewModel() {

           //Make the self as 'this' reference
           var self = this;
           //Declare observable which will be bind with UI 
           self.ArtistId = ko.observable("");
           self.Name = ko.observable("");

           var Artist = {
               ArtistId: self.ArtistId,
               Name: self.Name
           };

           self.Artist = ko.observable();
           self.Artists = ko.observableArray();   // Contains the list of artists

           // Initialize the view-model
           $.ajax({
               url: '@Url.Action("GetAllArtists", "Artists")',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (data) {
                    self.Artists(data); //Put the response in ObservableArray
                }
            });

            //Add New Item
            self.create = function () {
                if (Artist.Name() != "") {
                    $.ajax({
                        url: '@Url.Action("AddArtist", "Artists")',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Artist),
                        success: function (data) {
                            // alert('added');
                            self.Artists.push(data);
                            self.Name("");
                        }
                    }).fail(
                         function (xhr, textStatus, err) {
                             alert(err);
                         });

                }
                else {
                    alert('Please Enter All the Values !!');
                }

            }
            // Delete artist details
            self.delete = function (Artist) {
                if (confirm('Are you sure to Delete "' + Artist.Name + '" ??')) {
                    var id = Artist.ArtistId;

                    $.ajax({
                        url: '@Url.Action("DeleteArtist", "Artists")',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(id),
                        success: function (data) {
                            self.Artists.remove(Artist);
                            //   alert("Record Deleted Successfully");
                        }
                    }).fail(
                     function (xhr, textStatus, err) {
                         alert(err);
                     });
                    }
            }

            // Edit artist details

                self.edit = function (Artist) {
                    self.Artist(Artist);

                }

            // Update artist details
                self.update = function () {
                    var Artist = self.Artist();

                    $.ajax({
                        url: '@Url.Action("EditArtist", "Artists")',
                        cache: false,
                        type: 'PUT',
                        contentType: 'application/json; charset=utf-8',
                        data: ko.toJSON(Artist),
                        success: function (data) {
                            self.Artists.removeAll();
                            self.Artists(data); //Put the response in ObservableArray
                            self.Artist(null);
                            alert("Record Updated Successfully");

                        }
                    })
                .fail(
                function (xhr, textStatus, err) {
                    alert(err);
                });
                }


            // Reset artist details
                self.reset = function () {
                    self.Name("");
                }

            // Cancel artist details

                self.cancel = function () {
                    self.Artist(null);

                }
            }
            var viewModel = new ArtistViewModel();
            ko.applyBindings(viewModel);

    </script>

}
    <h3>Artists</h3>

    <table id="artists1" data-bind="visible: Artists().length > 0">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: Artists">
            <tr>
                <td data-bind="text: Name"></td>

                <td>
                    <button data-bind="click: $root.edit">Edit</button>
                    <button data-bind="click: $root.delete">Delete</button>

                </td>

            </tr>
        </tbody>
    </table>
    <br />
    <div style="border-top: solid 2px  #282828; width: 430px; height: 10px">&nbsp;</div>

    <div data-bind="if: Artist">
        <div>
            <h2>Update Artist</h2>
        </div>
        <div>
            <label for="artid" data-bind="visible: false">ID</label>
            <label data-bind="text: Artist().ArtistId, visible: false"></label>

        </div>
        <div>
            <label for="name">Name</label>
            <input data-bind="value: Artist().Name" type="text" title="Name" />
        </div>

        <br />
        <div>
            <button data-bind="click: $root.update">Update</button>
            <button data-bind="click: $root.cancel">Cancel</button>

        </div>
    </div>


    <div data-bind="ifnot: Artist()">
        <div>
            <h2>Add New Artist</h2>
        </div>
        <div>
            <label for="name">Name</label>
            <input data-bind="value: $root.Name" type="text" title="Name" />
        </div>

        <br />
        <div>
            <button data-bind="click: $root.create">Save</button>
            <button data-bind="click: $root.reset">Reset</button>

        </div>
    </div>
